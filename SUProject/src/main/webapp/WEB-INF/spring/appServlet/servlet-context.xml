<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/css/**" location="/resources/css/" />
	<resources mapping="/img/**" location="/resources/img/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- 객체를 자동으로 만들 기본 패키지 지정 => 기본 패키지 아래에 특정하게 정의해 놓은 클래스를 자동 생성된다. -->
	<context:component-scan base-package="com.suproject" />
	
	<!-- 인터셉터 설정 -->
	<beans:bean id="loginGETInterceptor" class="com.suproject.interceptor.LoginGETInterceptor"></beans:bean>
	<interceptors>
		<interceptor>
			<mapping path="/user/login"/>
			<beans:ref bean="loginGETInterceptor"/>
		</interceptor>
	</interceptors>
	
	<beans:bean id="loginPOSTInterceptor" class="com.suproject.interceptor.LoginPOSTInterceptor"></beans:bean>
	<interceptors>
		<interceptor>
			<mapping path="/user/loginPOST"/>
			<beans:ref bean="loginPOSTInterceptor"/>
		</interceptor>
	</interceptors>
	
	<beans:bean id="authLoginInterceptor" class="com.suproject.interceptor.AuthLoginInterceptor"></beans:bean>
	<interceptors>
		<interceptor>
			<mapping path="/myPT/**"/>
			<mapping path="/admin/**"/>
			<mapping path="/apply/**"/>
			<beans:ref bean="authLoginInterceptor"/>
		</interceptor>
	</interceptors>
	
	<beans:bean id="myPTGETInterceptor" class="com.suproject.interceptor.MyPTGETInterceptor"></beans:bean>
	<interceptors>
		<interceptor>
			<mapping path="/myPT/view"/>
			<mapping path="/myPT/modify"/>
			<mapping path="/myPT/feedback"/>
			<beans:ref bean="myPTGETInterceptor"/>
		</interceptor>
	</interceptors>

	<beans:bean id="authAdminInterceptor" class="com.suproject.interceptor.AuthAdminInterceptor"></beans:bean>
	<interceptors>
		<interceptor>
			<mapping path="/admin/**"/>
			<beans:ref bean="authAdminInterceptor"/>
		</interceptor>
	</interceptors>
	
	<beans:bean id="authTrainerInterceptor" class="com.suproject.interceptor.AuthTrainerInterceptor"></beans:bean>
	<interceptors>
		<interceptor>
			<mapping path="/myPT/trainer/**"/>
			<mapping path="/trainer/**"/>
			<beans:ref bean="authTrainerInterceptor"/>
		</interceptor>
	</interceptors>
	
	<beans:bean id="applyTrainerGETInterceptor" class="com.suproject.interceptor.ApplyTrainerGETInterceptor"></beans:bean>
	<interceptors>
		<interceptor>
			<mapping path="/apply/applyTrainer"/>
			<beans:ref bean="applyTrainerGETInterceptor"/>
		</interceptor>
	</interceptors>
	
	<beans:bean id="applyTrainerViewGETInterceptor" class="com.suproject.interceptor.ApplyTrainerViewGETInterceptor"></beans:bean>
	<interceptors>
		<interceptor>
			<mapping path="/apply/viewApplyTrainer"/>
			<beans:ref bean="applyTrainerViewGETInterceptor"/>
		</interceptor>
	</interceptors>
	
	<beans:bean id="applyPTGETInterceptor" class="com.suproject.interceptor.ApplyPTGETInterceptor"></beans:bean>
	<interceptors>
		<interceptor>
			<mapping path="/apply/applyPT"/>
			<beans:ref bean="applyPTGETInterceptor"/>
		</interceptor>
	</interceptors>
	
	<beans:bean id="applyPTViewGETInterceptor" class="com.suproject.interceptor.ApplyPTViewGETInterceptor"></beans:bean>
	<interceptors>
		<interceptor>
			<mapping path="/apply/viewApplyPT"/>
			<beans:ref bean="applyPTViewGETInterceptor"/>
		</interceptor>
	</interceptors>
	
	<beans:bean id="checkTotalcntInterceptor" class="com.suproject.interceptor.CheckTotalcntInterceptor"></beans:bean>
	<interceptors>
		<interceptor>
			<mapping path="/myPT/list"/>
			<beans:ref bean="checkTotalcntInterceptor"/>
		</interceptor>
	</interceptors>
	
	<!-- 파일 업로드 빈 설정 -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="20971520"></beans:property>
	</beans:bean>
	
<!-- 	<beans:bean id="uploadPath" class="java.lang.String"> -->
<!-- 		<beans:constructor-arg  value="C:\\spupload"></beans:constructor-arg> -->
<!-- 	</beans:bean> -->
	
</beans:beans>
